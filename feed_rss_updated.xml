<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>Paul Withers&#39; Blog</title><description>A blog about various HCL software, software development and related learning, from an Lifetime IBM Champion and former HCL Lifetime Ambassador</description><link>https://paulswithers.github.io/</link><atom:link href="https://paulswithers.github.io/feed_rss_updated.xml" rel="self" type="application/rss+xml" /><managingEditor>Paul S. Withers</managingEditor><docs>https://github.com/paulswithers/paulswithers.github.io</docs><language>en</language> <pubDate>Sun, 05 Oct 2025 15:04:49 -0000</pubDate> <lastBuildDate>Sun, 05 Oct 2025 15:04:49 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.17.3</generator> <image> <url>None</url> <title>Paul Withers' Blog</title><link>https://paulswithers.github.io/</link> </image> <item> <title>Welcome to My Blog</title> <description>&lt;h1&gt;Welcome to My Blog&lt;/h1&gt;&lt;h2&gt;About Me&lt;/h2&gt;&lt;p&gt;I have been a developer since 2000, primarily with the IBM Domino stack. When IBM introduced XPages, a JSF-based framework, to the stack in 2009 I was one of the early adopters, &lt;a href=&#34;http://www.intec.co.uk/blog/&#34;&gt;blogging&lt;/a&gt;, training, speaking and eventually co-authoring &#34;XPages Extension Library&#34; by IBM Press in 2012 and acting as technical editor for &#34;Mastering XPages 2nd Edition&#34; by IBM Press in 2014. As a technical evangelist I have been recognised by IBM in their IBM Champion program as an ever-present champion since it&#39;s inception for the IBM Collaboration Solutions brand (which includes IBM Domino) in 2011. I&#39;ve been a committed contributor to open source during that time and I firmly believe in learning through sharing and empowering others. I always try to understand the &#34;why&#34; behind the &#34;what&#34;, and help verbalise that for others too. By sharing code I&#39;ve learned a great deal from other contributors and through feature requests. Since October 2013 I&#39;ve been a board member of the open source organisation &lt;a href=&#34;https://openntf.org/main.nsf&#34;&gt;OpenNTF&lt;/a&gt;.&lt;/p&gt;</description><link>https://paulswithers.github.io/blog/2016/07/08/welcome/</link> <pubDate>Sun, 05 Oct 2025 15:04:30 +0000</pubDate><source url="https://paulswithers.github.io/feed_rss_updated.xml">Paul Withers' Blog</source><guid isPermaLink="true">https://paulswithers.github.io/blog/2016/07/08/welcome/</guid> </item> <item> <title>Background and Purpose</title> <description>&lt;h1&gt;Background and Purpose&lt;/h1&gt;&lt;p&gt;For the last six years, I have blogged heavily (375 posts in 3 years and nine months, more than one post per week) on &lt;a href=&#34;http://www.intec.co.uk/blog/&#34;&gt;Intec&#39;s blog&lt;/a&gt;. So the question naturally arises why I should choose to start a personal blog, and why now.&lt;/p&gt;</description><link>https://paulswithers.github.io/blog/2016/07/12/background-and-purpose/</link> <pubDate>Sun, 05 Oct 2025 15:04:30 +0000</pubDate><source url="https://paulswithers.github.io/feed_rss_updated.xml">Paul Withers' Blog</source><guid isPermaLink="true">https://paulswithers.github.io/blog/2016/07/12/background-and-purpose/</guid> </item> <item> <title>Thoughts on Domino</title> <description>&lt;h1&gt;Thoughts on Domino&lt;/h1&gt;&lt;p&gt;The key to any relationship is periodically stepping back and appreciating the good points in contrast to the little annoyances that grate, so that you&#39;re not distracted by the first pretty young face (or muscular torso, depending on your predilection) that you encounter. When you thinking it might be time to leave the relationship, that is the most crucial (though most difficult) time to evaluate honestly and dispassionately what you have / had. Because if you don&#39;t, sooner or later you&#39;ll find different annoyances that grate; or you&#39;ll find something you took for granted and absolutely needed is missing from your new love; and before you know it that love too will turn sour and you&#39;ll be crying into your alcohol bemoaning wasted years and shattered dreams while looking at a bank account that&#39;s been wiped out by periodic divorce settlements.&lt;/p&gt;</description><link>https://paulswithers.github.io/blog/2016/07/13/thoughts-on-domino/</link> <pubDate>Sun, 05 Oct 2025 15:04:30 +0000</pubDate><source url="https://paulswithers.github.io/feed_rss_updated.xml">Paul Withers' Blog</source><guid isPermaLink="true">https://paulswithers.github.io/blog/2016/07/13/thoughts-on-domino/</guid> </item> <item> <title>IBM Websphere Liberty</title> <description>&lt;h1&gt;IBM Websphere Liberty&lt;/h1&gt;&lt;p&gt;IBM Websphere Liberty is a widely-used modern lightweight server (less than 70Mb, I have several running on my PC) that allows modern Java EE development with Java 8. The server is free for development and build server, with limited production use (up to 2Gb of JVM heap space across all instances for the organisation). Web applications are deployed as standard web archives, which means it&#39;s easy to download and install demos of various frameworks and easy to use Maven. This is something I&#39;ve fought with when developing OSGi plugins, because Maven is designed to manage and install dependencies be compilation. On the other hand OSGi best practice is to pull them from other plugins, defined in the MANIFEST.MF. At the very least OSGi needs the plugins adding to the classpath in the MANIFEST.MF. Tycho is designed to bridge the gap between what Maven expects and what OSGi expects, but it&#39;s not great. So a standard web application, sucking any jar files in via Maven, makes life a lot easier.&lt;/p&gt;</description><link>https://paulswithers.github.io/blog/2016/07/14/ibm-websphere-liberty/</link> <pubDate>Sun, 05 Oct 2025 15:04:30 +0000</pubDate><source url="https://paulswithers.github.io/feed_rss_updated.xml">Paul Withers' Blog</source><guid isPermaLink="true">https://paulswithers.github.io/blog/2016/07/14/ibm-websphere-liberty/</guid> </item> <item> <title>Vaadin</title> <description>&lt;h1&gt;Vaadin&lt;/h1&gt;&lt;p&gt;Before I started working with IBM&#39;s XPages framework in 2009, I was starting to use AJAX calls in web applications and starting to dig into Dojo charting options for an application. So not unsurprisingly, when I started with XPages I blogged quite a bit about Dojo charts and understandably chose to write the Dojo-related chapter and a half of &lt;a href=&#34;https://www.amazon.co.uk/XPages-Extension-Library-Step-step/dp/0132901811&#34;&gt;&#34;XPages Extension Library&#34;&lt;/a&gt;. I also contributed a &lt;a href=&#34;https://openntf.org/main.nsf/project.xsp?r=project/Dijit.Tooltip Custom Control&#34;&gt;Dijit Tooltip custom control&lt;/a&gt; and an extension to the &lt;a href=&#34;https://openntf.org/main.nsf/project.xsp?r=project/Dojox.Charting%20Legend%20Extension&#34;&gt;Dojo Legend component&lt;/a&gt;, to allow more sophisticated formatting of the legend.&lt;/p&gt;</description><link>https://paulswithers.github.io/blog/2016/07/26/vaadin/</link> <pubDate>Sun, 05 Oct 2025 15:04:30 +0000</pubDate><source url="https://paulswithers.github.io/feed_rss_updated.xml">Paul Withers' Blog</source><guid isPermaLink="true">https://paulswithers.github.io/blog/2016/07/26/vaadin/</guid> </item> <item> <title>Communication and Community</title> <description>&lt;h1&gt;Communication and Community&lt;/h1&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en-gb&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Communication &amp;amp; transparency are critical to lifeblood of any community, open source or closed. Seeing impacts in more than one community&lt;/p&gt;&amp;mdash; Paul Withers (@PaulSWithers) &lt;a href=&#34;https://twitter.com/PaulSWithers/status/758612998814572544&#34;&gt;28 July 2016&lt;/a&gt;&lt;/blockquote&gt;</description><link>https://paulswithers.github.io/blog/2016/07/30/communication-and-community/</link> <pubDate>Sun, 05 Oct 2025 15:04:30 +0000</pubDate><source url="https://paulswithers.github.io/feed_rss_updated.xml">Paul Withers' Blog</source><guid isPermaLink="true">https://paulswithers.github.io/blog/2016/07/30/communication-and-community/</guid> </item> <item> <title>Why Graph?</title> <description>&lt;h1&gt;Why Graph?&lt;/h1&gt;&lt;p&gt;The bulk of my experience with application development has been building workflow-related rich client and web applications on NoSQL databases, typically IBM Domino. The challenge in the Notes Client was to provide dashboard-style displays and a good way to display documents for action by the current individual. Private views can be used, but impact database performance. So, typically, the approach is to display views that present a scrollable table of data. Domino&#39;s document-level reader security is then used to ensure only the appropriate data is visible. If data is archived appropriately, performance of the database is good enough for many reasonably-sized applications. (Of course, archiving is often omitted from scope of the first phase for the rapidly-developed application, and becomes a case of &#34;out of sight, out of mind&#34;.) But with the increasing prevalence of web applications replacing Notes Client applications, the ability to display &#34;my documents&#34; and use structured searches to display a targeted subset of documents was much easier.&lt;/p&gt;</description><link>https://paulswithers.github.io/blog/2016/08/24/graph-databases/</link> <pubDate>Sun, 05 Oct 2025 15:04:30 +0000</pubDate><source url="https://paulswithers.github.io/feed_rss_updated.xml">Paul Withers' Blog</source><guid isPermaLink="true">https://paulswithers.github.io/blog/2016/08/24/graph-databases/</guid> </item> <item> <title>Taking Titan to the Next Level</title> <description>&lt;h1&gt;Taking Titan to the Next Level&lt;/h1&gt;&lt;p&gt;Since earlier this year when I started trying to get a better handle on the breadth of graph database options available for a developer, Titan has been an option I have kept in regular contact with. It&#39;s fair to say there has been a lot of uncertainty about the prospects for Titan. But there have been some interesting developments regarding Titan during the summer. IBM Graph has reached GA on Bluemix, albeit with only REST access, which may not appeal to Java developers, particularly those familiar with Titan and comfortable with natively handling vertices and edges. And more recently there has been a lot of work on integrating Titan with ScyllaDb, which provides a long-term option for using Thrift as a communication mechanism between Titan and the backend database.&lt;/p&gt;</description><link>https://paulswithers.github.io/blog/2016/09/20/taking-titan-to-the-next-level/</link> <pubDate>Sun, 05 Oct 2025 15:04:30 +0000</pubDate><source url="https://paulswithers.github.io/feed_rss_updated.xml">Paul Withers' Blog</source><guid isPermaLink="true">https://paulswithers.github.io/blog/2016/09/20/taking-titan-to-the-next-level/</guid> </item> <item> <title>How To Impress A Technical Evangelist</title> <description>&lt;h1&gt;How To Impress A Technical Evangelist&lt;/h1&gt;&lt;p&gt;I&#39;ve been involved in developing training materials, tutorials, videos, online documentation and even books. So I&#39;ve gained a full appreciation of the effort involved in not only creating good documentation but maintaining it too. &lt;a href=&#34;https://blog.winkelmeyer.com/2016/09/developer-experience-is-important/&#34;&gt;Rene Winkelmeyer&lt;/a&gt; wrote a good blog post today about developer experience and his points are very valid.&lt;/p&gt;&lt;p&gt;Over the last couple of years I&#39;ve seen a number of approaches as I&#39;ve dug into a variety of new technologies.&lt;/p&gt;</description><link>https://paulswithers.github.io/blog/2016/09/28/impress-evangelist/</link> <pubDate>Sun, 05 Oct 2025 15:04:30 +0000</pubDate><source url="https://paulswithers.github.io/feed_rss_updated.xml">Paul Withers' Blog</source><guid isPermaLink="true">https://paulswithers.github.io/blog/2016/09/28/impress-evangelist/</guid> </item> <item> <title>Making Progress (Bars)</title> <description>&lt;h1&gt;Making Progress (Bars)&lt;/h1&gt;&lt;p&gt;Earlier this week I had problems with high CPU utilisation and had to restart my PC. I took the opportunity to bite the bullet and install some Windows Updates. What I saw brought my mind back to UX and coding of applications. For at least five minutes, the progress displayed as &#34;&lt;strong&gt;100% Complete&lt;/strong&gt;&#34;. It prompted me to issue the following tweets:&lt;/p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en-gb&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Developers, progress bar should never show 100% complete. It should be 0% of next process or gone. Windows updates 100% complete for minutes&lt;/p&gt;&amp;mdash; Paul Withers (@PaulSWithers) &lt;a href=&#34;https://twitter.com/PaulSWithers/status/788393811022143488&#34;&gt;18 October 2016&lt;/a&gt;&lt;/blockquote&gt;</description><link>https://paulswithers.github.io/blog/2016/10/20/making-progress/</link> <pubDate>Sun, 05 Oct 2025 15:04:30 +0000</pubDate><source url="https://paulswithers.github.io/feed_rss_updated.xml">Paul Withers' Blog</source><guid isPermaLink="true">https://paulswithers.github.io/blog/2016/10/20/making-progress/</guid> </item> <item> <title>Mixing web.xml and Annotations</title> <description>&lt;h1&gt;Mixing web.xml and Annotations&lt;/h1&gt;&lt;p&gt;Over the last few months a lot of what I&#39;ve had to do has come from combining frameworks. Usually one of those frameworks is &lt;a href=&#34;https://vaadin.com/home&#34; title=&#34;Vaadin&#34;&gt;Vaadin&lt;/a&gt;. But whenever you&#39;re combining frameworks of any kind, it usually means some content is pre-configured, which may conflict with settings in another framework. If you&#39;re not familiar with the framework and the technologies in use, it&#39;s a lot like looking at hieroglyphics without a &lt;a href=&#34;https://en.wikipedia.org/wiki/Rosetta_Stone&#34;&gt;Rosetta Stone&lt;/a&gt;! The result is a lot of learning on the job.&lt;/p&gt;</description><link>https://paulswithers.github.io/blog/2016/10/24/mixing-webxml-and-annotations/</link> <pubDate>Sun, 05 Oct 2025 15:04:30 +0000</pubDate><source url="https://paulswithers.github.io/feed_rss_updated.xml">Paul Withers' Blog</source><guid isPermaLink="true">https://paulswithers.github.io/blog/2016/10/24/mixing-webxml-and-annotations/</guid> </item> <item> <title>Creating a Java API to Access Watson Work Services</title> <description>&lt;h1&gt;Creating a Java API to Access Watson Work Services&lt;/h1&gt;&lt;p&gt;A few weeks ago, IBM announced Watson Workspace, the final name for Project Toscana, and its API Watson Work Services. The product itself has similarities to Slack or Microsoft Teams, but this post is not about discussing a comparison of the products. It&#39;s about the API backing it.&lt;/p&gt;&lt;p&gt;Watson Work Services is a REST API that uses &lt;a href=&#34;http://graphql.org/learn&#34;&gt;GraphQL&lt;/a&gt;, a method of querying and posting via REST that focuses on configurability. Whereas traditional REST services have fixed endpoints that take fixed parameters and return fixed data objects, GraphQL is a sort of &#34;API-as-a-service&#34;. You call an endpoint, pass a JSON object determining what elements of which data you want to return, include any dynamic variable values. The queries are passed to an engine at a REST service endpoint which parses the JSON passed, replaces any variables with the dynamically passed values, and returns just what the application or user asks for. This may include data from what, in a traditional REST API application, would be from different REST endpoints. For example, to get members and messages from a space, you might need to make a REST call to get the space ID, then another REST call to get its members, and a third to get the messages.&lt;/p&gt;</description><link>https://paulswithers.github.io/blog/2016/11/15/wws-java-api/</link> <pubDate>Sun, 05 Oct 2025 15:04:30 +0000</pubDate><source url="https://paulswithers.github.io/feed_rss_updated.xml">Paul Withers' Blog</source><guid isPermaLink="true">https://paulswithers.github.io/blog/2016/11/15/wws-java-api/</guid> </item> <item> <title>Graph Database News</title> <description>&lt;h1&gt;Graph Database News&lt;/h1&gt;&lt;p&gt;Last year I &lt;a href=&#34;./2016-09-20-taking-titan-to-the-next-level.md&#34;&gt;blogged&lt;/a&gt; about an initiative to take TitanDb to the Apache Foundation as an incubation project. Yesterday, the next step for TitanDb was announced, when the Linux Foundation &lt;a href=&#34;https://www.linux.com/blog/Linux-Foundation-welcomes-JanusGraph&#34;&gt;welcomed JanusGraph&lt;/a&gt;, a project which uses TitanDb as its starting point. The current &lt;a href=&#34;http://docs.janusgraph.org/0.1.0-SNAPSHOT/&#34;&gt;documentation&lt;/a&gt; will look familiar to anyone who has investigated TitanDb, but the news will be welcomed by the TitanDb community. So it&#39;s worth keeping an eye on the &lt;a href=&#34;http://janusgraph.org/&#34;&gt;JanusGraph website&lt;/a&gt;.&lt;/p&gt;</description><link>https://paulswithers.github.io/blog/2017/01/13/graph-database-news/</link> <pubDate>Sun, 05 Oct 2025 15:04:30 +0000</pubDate><source url="https://paulswithers.github.io/feed_rss_updated.xml">Paul Withers' Blog</source><guid isPermaLink="true">https://paulswithers.github.io/blog/2017/01/13/graph-database-news/</guid> </item> <item> <title>IBM Connect 2017: Embrace Fear</title> <description>&lt;h1&gt;IBM Connect 2017: Embrace Fear&lt;/h1&gt;&lt;h2&gt;This Is Not a Vendor Pitch&lt;/h2&gt;&lt;p&gt;When I began my personal blog last year, I was investigating new technologies beyond the IBM Collaboration Solutions stack. This last week I&#39;ve been attending and presenting at the conference, including covering one of those new technologies. The experience for me has changed drastically the direction I was heading. But this is not about a vendor&#39;s products, this is about the open source technologies I intend to pursue over the next year.&lt;/p&gt;</description><link>https://paulswithers.github.io/blog/2017/02/25/ibm-connect-2017/</link> <pubDate>Sun, 05 Oct 2025 15:04:30 +0000</pubDate><source url="https://paulswithers.github.io/feed_rss_updated.xml">Paul Withers' Blog</source><guid isPermaLink="true">https://paulswithers.github.io/blog/2017/02/25/ibm-connect-2017/</guid> </item> <item> <title>My Development Tools - Part One: Domino and XPages</title> <description>&lt;h1&gt;My Development Tools - Part One: Domino and XPages&lt;/h1&gt;&lt;p&gt;I&#39;ve recently had a new laptop. Since I last had an upgrade of hardware a lot has changed. Back then, I think my development tooling was Domino Designer, a Domino server, and possibly SourceTree. Now the software I needed to install was much more significant. So now is a good time to cover that.&lt;/p&gt;</description><link>https://paulswithers.github.io/blog/2017/04/26/my-dev-tools/</link> <pubDate>Sun, 05 Oct 2025 15:04:30 +0000</pubDate><source url="https://paulswithers.github.io/feed_rss_updated.xml">Paul Withers' Blog</source><guid isPermaLink="true">https://paulswithers.github.io/blog/2017/04/26/my-dev-tools/</guid> </item> <item> <title>My Development Tools - Part Two: Beyond Domino</title> <description>&lt;h1&gt;My Development Tools - Part Two: Beyond Domino&lt;/h1&gt;&lt;p&gt;Following on from my &lt;a href=&#34;./2017-04-26-my-dev-tools.md&#34;&gt;last blog post&lt;/a&gt; it&#39;s now time to move on beyond the tooling related to Domino and XPages.&lt;/p&gt;</description><link>https://paulswithers.github.io/blog/2017/05/26/my-dev-tools-2/</link> <pubDate>Sun, 05 Oct 2025 15:04:30 +0000</pubDate><source url="https://paulswithers.github.io/feed_rss_updated.xml">Paul Withers' Blog</source><guid isPermaLink="true">https://paulswithers.github.io/blog/2017/05/26/my-dev-tools-2/</guid> </item> <item> <title>Developing for Performance</title> <description>&lt;h1&gt;Developing for Performance&lt;/h1&gt;&lt;p&gt;One of the themes which crops up from time to time in Domino application development and beyond is the theme of &#34;performance&#34;. It&#39;s a topic which makes me grit my teeth because of the basic premise. Most articles start from what, for me, is a narrow terms of reference: performance optimisation being about how quick a specific amount of data can be served to a specific environment. My interpretation of the term &#34;performance&#34; is much wider and that is the reason for my scepticism and concern of how people may interpret or use such articles. There are important points raised, but there are also caveats that need to be borne in mind.&lt;/p&gt;</description><link>https://paulswithers.github.io/blog/2017/08/17/developing-for-performance/</link> <pubDate>Sun, 05 Oct 2025 15:04:30 +0000</pubDate><source url="https://paulswithers.github.io/feed_rss_updated.xml">Paul Withers' Blog</source><guid isPermaLink="true">https://paulswithers.github.io/blog/2017/08/17/developing-for-performance/</guid> </item> <item> <title>Java Outside Domino in Eclipse</title> <description>&lt;h1&gt;Java Outside Domino in Eclipse&lt;/h1&gt;&lt;p&gt;Recently I&#39;ve been diving back into running Java outside of the Domino HTTP stack, picking up some work I did quite a few years ago playing with &lt;a href=&#34;https://github.com/paulswithers/vertx-domino&#34;&gt;Vert.x and Domino&lt;/a&gt; based on Stephan Wissel&#39;s blog series on &lt;a href=&#34;https://www.wissel.net/blog/2014/07/adventures-with-vertx-64bit-and-the-ibm-notes-client.html&#34;&gt;Vert.x and Domino&lt;/a&gt;. Quite a few things have happened since I was last working on the project, not least the laptop I had at the time got rebuilt, I have got a new laptop, several version of Eclipse have been released and XPages SDK has been deployed to the Eclipse Marketplace (thanks Jesse Gallagher).&lt;/p&gt;</description><link>https://paulswithers.github.io/blog/2019/09/17/java-outside-domino-eclipse/</link> <pubDate>Sun, 05 Oct 2025 15:04:30 +0000</pubDate><source url="https://paulswithers.github.io/feed_rss_updated.xml">Paul Withers' Blog</source><guid isPermaLink="true">https://paulswithers.github.io/blog/2019/09/17/java-outside-domino-eclipse/</guid> </item> <item> <title>Danger of Mid Code to Pro Code</title> <description>&lt;h1&gt;Danger of Mid Code to Pro Code&lt;/h1&gt;&lt;p&gt;People discussing Domino application development have been using a new term since early this year - &#34;mid code&#34;. This has become necessary because of the evolution of Domino development since Domino V10.&lt;/p&gt;</description><link>https://paulswithers.github.io/blog/2019/10/01/danger-mid-code-pro-code/</link> <pubDate>Sun, 05 Oct 2025 15:04:30 +0000</pubDate><source url="https://paulswithers.github.io/feed_rss_updated.xml">Paul Withers' Blog</source><guid isPermaLink="true">https://paulswithers.github.io/blog/2019/10/01/danger-mid-code-pro-code/</guid> </item> <item> <title>Error Management</title> <description>&lt;h1&gt;Error Management&lt;/h1&gt;&lt;p&gt;Over the years I&#39;ve done a lot of development on a variety of platforms. Error management is something developers either bake in from the start, add in later, or never get round to! It seems a good time to review my experiences and my philosophy.&lt;/p&gt;&lt;p&gt;tl;dr - it varies.&lt;/p&gt;</description><link>https://paulswithers.github.io/blog/2019/10/10/error-management/</link> <pubDate>Sun, 05 Oct 2025 15:04:30 +0000</pubDate><source url="https://paulswithers.github.io/feed_rss_updated.xml">Paul Withers' Blog</source><guid isPermaLink="true">https://paulswithers.github.io/blog/2019/10/10/error-management/</guid> </item> </channel></rss>